# tasks file for create-master
---

- name: Gathering Zones
  aws_az_facts:
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
    region: us-east-1
  register: zones1

- name: Create Master
  ec2:
    key_name: "{{ key_name }}" # This is now the dynamically created key
    instance_type: t2.micro
    image: "{{ ami_id }}"  ##Need to add a Ubuntu or CentOS image
    wait: yes
    count: 1
    group: "Ubuntu-1"
    vpc_subnet_id: "{{ vpc_subnet_id }}"  ##Could use default vpc or create a new vpc
    assign_public_ip: yes
    region: "{{ aws_region }}"
    instance_tags:
       Name: Master
  register: ec2

- name: Fetching EC2 Facts
  ec2_instance_facts:
    region: "{{ aws_region }}"
    filters:
      "tag:Name": Master
  register: master_facts

- name: Add the newly created Instance to hosts file
  add_host:
    name: "{{ master_facts.instances | selectattr('public_dns_name', 'contains' ,'ec2') | map(attribute='public_dns_name') | first }}"
    group: Master
    ansible_ssh_user: ubuntu
    ansible_ssh_host: "{{ master_facts.instances | selectattr('public_dns_name', 'contains' ,'ec2') | map(attribute='public_dns_name') | first }}"
    ansible_ssh_private_key_file: "{{ ssh_public_key }}"
  with_items: "{{ ec2.instances }}"

- name: Wait for SSH to come up
  # become: yes
  # remote_user: ubuntu
  wait_for:
    host: "{{ master_facts.instances | selectattr('public_dns_name', 'contains' ,'ec2') | map(attribute='public_dns_name') | first }}"
    port: 22
    state: started
  with_items: "{{ ec2.instances }}"

